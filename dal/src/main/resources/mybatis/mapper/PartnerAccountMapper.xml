<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mini.dal.mapper.PartnerAccountMapper">

    <resultMap id="BaseResultMap" type="com.mini.dal.model.PartnerAccountDO">
        <!--<id column="id" jdbcType="BIGINT" property="id" />-->
                <result column="id" jdbcType="BIGINT" property="id" />
                <result column="partner_id" jdbcType="BIGINT" property="partnerId" />
                <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
                <result column="opening_bank" jdbcType="VARCHAR" property="openingBank" />
                <result column="account_name" jdbcType="VARCHAR" property="accountName" />
                <result column="account_num" jdbcType="VARCHAR" property="accountNum" />
                <result column="account_type" jdbcType="TINYINT" property="accountType" />
                <result column="status" jdbcType="TINYINT" property="status" />
                <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
                <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
                <!--
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
                <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />-->
    </resultMap>

    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                #{listItem}
                            </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <foreach collection="query.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,partner_id,bank_name,opening_bank,account_name,account_num,account_type,status,gmt_create,gmt_modified
    </sql>

    <select id="selectByQuery" parameterType="com.mini.dal.query.PartnerAccountQuery" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
            from b2b_partner_account
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MysqlDialectSuffix" />
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from b2b_partner_account where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from b2b_partner_account where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByQuery" parameterType="com.mini.dal.query.PartnerAccountQuery">
        delete from b2b_partner_account
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </delete>

    <insert id="insertSelective" parameterType="com.mini.dal.model.PartnerAccountDO">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into b2b_partner_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="partnerId != null">
                partner_id,
            </if>
            <if test="bankName != null">
                bank_name,
            </if>
            <if test="openingBank != null">
                opening_bank,
            </if>
            <if test="accountName != null">
                account_name,
            </if>
            <if test="accountNum != null">
                account_num,
            </if>
            <if test="accountType != null">
                account_type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="partnerId != null">
                #{partnerId,jdbcType=BIGINT},
            </if>
            <if test="bankName != null">
                #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="openingBank != null">
                #{openingBank,jdbcType=VARCHAR},
            </if>
            <if test="accountName != null">
                #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountNum != null">
                #{accountNum,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null">
                #{accountType,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByQuery" parameterType="com.mini.dal.query.PartnerAccountQuery" resultType="java.lang.Integer">
        select count(*) from b2b_partner_account
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </select>

    <update id="updateByQuerySelective" parameterType="map">
        update b2b_partner_account
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.partnerId != null">
                partner_id = #{record.partnerId,jdbcType=BIGINT},
            </if>
            <if test="record.bankName != null">
                bank_name = #{record.bankName,jdbcType=VARCHAR},
            </if>
            <if test="record.openingBank != null">
                opening_bank = #{record.openingBank,jdbcType=VARCHAR},
            </if>
            <if test="record.accountName != null">
                account_name = #{record.accountName,jdbcType=VARCHAR},
            </if>
            <if test="record.accountNum != null">
                account_num = #{record.accountNum,jdbcType=VARCHAR},
            </if>
            <if test="record.accountType != null">
                account_type = #{record.accountType,jdbcType=TINYINT},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByQuery" parameterType="map">
        update b2b_partner_account
        id = #{record.id,jdbcType=BIGINT},
        partner_id = #{record.partnerId,jdbcType=BIGINT},
        bank_name = #{record.bankName,jdbcType=VARCHAR},
        opening_bank = #{record.openingBank,jdbcType=VARCHAR},
        account_name = #{record.accountName,jdbcType=VARCHAR},
        account_num = #{record.accountNum,jdbcType=VARCHAR},
        account_type = #{record.accountType,jdbcType=TINYINT},
        status = #{record.status,jdbcType=TINYINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.mini.dal.model.PartnerAccountDO">
        update b2b_partner_account
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="partnerId != null">
                partner_id = #{partnerId,jdbcType=BIGINT},
            </if>
            <if test="bankName != null">
                bank_name = #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="openingBank != null">
                opening_bank = #{openingBank,jdbcType=VARCHAR},
            </if>
            <if test="accountName != null">
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountNum != null">
                account_num = #{accountNum,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null">
                account_type = #{accountType,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <sql id="MysqlDialectSuffix">
        <if test="pageOffset &gt;= 0 and pageSize &gt; 0">
            <![CDATA[ LIMIT #{pageOffset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER} ]]>
        </if>
    </sql>

</mapper>
