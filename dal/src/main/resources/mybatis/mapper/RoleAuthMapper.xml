<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mini.dal.mapper.RoleAuthMapper">

    <resultMap id="BaseResultMap" type="com.mini.dal.model.RoleAuthDO">
        <!--<id column="id" jdbcType="BIGINT" property="id" />-->
                <result column="id" jdbcType="BIGINT" property="id" />
                <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
                <result column="role_name" jdbcType="VARCHAR" property="roleName" />
                <result column="auth_code" jdbcType="VARCHAR" property="authCode" />
                <result column="auth_name" jdbcType="VARCHAR" property="authName" />
                <result column="status" jdbcType="TINYINT" property="status" />
                <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
                <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
                <!--
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
                <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />-->
    </resultMap>

    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                #{listItem}
                            </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <foreach collection="query.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,role_code,role_name,auth_code,auth_name,status,gmt_modified,gmt_create
    </sql>

    <select id="selectByQuery" parameterType="com.mini.dal.query.RoleAuthQuery" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
            from b2b_role_auth
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MysqlDialectSuffix" />
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from b2b_role_auth where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from b2b_role_auth where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByQuery" parameterType="com.mini.dal.query.RoleAuthQuery">
        delete from b2b_role_auth
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </delete>

    <insert id="insertSelective" parameterType="com.mini.dal.model.RoleAuthDO">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into b2b_role_auth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="authCode != null">
                auth_code,
            </if>
            <if test="authName != null">
                auth_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="authCode != null">
                #{authCode,jdbcType=VARCHAR},
            </if>
            <if test="authName != null">
                #{authName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByQuery" parameterType="com.mini.dal.query.RoleAuthQuery" resultType="java.lang.Integer">
        select count(*) from b2b_role_auth
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </select>

    <update id="updateByQuerySelective" parameterType="map">
        update b2b_role_auth
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.roleCode != null">
                role_code = #{record.roleCode,jdbcType=VARCHAR},
            </if>
            <if test="record.roleName != null">
                role_name = #{record.roleName,jdbcType=VARCHAR},
            </if>
            <if test="record.authCode != null">
                auth_code = #{record.authCode,jdbcType=VARCHAR},
            </if>
            <if test="record.authName != null">
                auth_name = #{record.authName,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByQuery" parameterType="map">
        update b2b_role_auth
        id = #{record.id,jdbcType=BIGINT},
        role_code = #{record.roleCode,jdbcType=VARCHAR},
        role_name = #{record.roleName,jdbcType=VARCHAR},
        auth_code = #{record.authCode,jdbcType=VARCHAR},
        auth_name = #{record.authName,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.mini.dal.model.RoleAuthDO">
        update b2b_role_auth
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="authCode != null">
                auth_code = #{authCode,jdbcType=VARCHAR},
            </if>
            <if test="authName != null">
                auth_name = #{authName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <sql id="MysqlDialectSuffix">
        <if test="pageOffset &gt;= 0 and pageSize &gt; 0">
            <![CDATA[ LIMIT #{pageOffset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER} ]]>
        </if>
    </sql>

</mapper>
